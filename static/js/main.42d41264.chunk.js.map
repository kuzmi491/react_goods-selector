{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","changeGood","good","setState","removeGood","this","className","type","onClick","map","chosenGood","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,WAAa,WACX,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WACE,IACEC,EAEEI,KAFFJ,WACAG,EACEC,KADFD,WAIAJ,EACEK,KAAKN,MADPC,aAGF,OACE,uBAAMM,UAAU,oBAAhB,UACIN,EAOE,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASJ,EACT,aAAW,aAbf,oBAAIE,UAAU,QAAd,+BAkBJ,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAP,GACT,IAAMQ,EAAaR,IAASF,EAE5B,OACE,qBAEE,UAAQ,OACRM,UAAWK,IACT,CAAE,+BAAgCD,IAJtC,UAOE,6BACGA,EAEG,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAASJ,EAJX,eAUA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBACPP,EAAWC,IALf,iBAaN,oBACE,UAAQ,YACRI,UAAU,eAFZ,SAIGJ,MApCEA,iBApDvB,GAAyBU,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.42d41264.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  changeGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  removeGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const {\n      changeGood,\n      removeGood,\n    } = this;\n\n    const {\n      selectedGood,\n    } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {!selectedGood\n          ? (\n            <h1 className=\"title\">\n              No goods selected\n            </h1>\n          )\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={removeGood}\n                aria-label=\"Clear\"\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const chosenGood = good === selectedGood;\n\n              return (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                  className={classNames(\n                    { 'has-background-success-light': chosenGood },\n                  )}\n                >\n                  <td>\n                    {chosenGood\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={removeGood}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => (\n                            changeGood(good)\n                          )}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n\n                  <td\n                    data-cy=\"GoodTitle\"\n                    className=\"is-vcentered\"\n                  >\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}